specVersion: 0.0.6
description: Mimic Finance V3
repository: https://github.com/mimic-fi/v3-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: {{network}}
    source:
      address: '{{registryAddress}}'
      abi: Registry
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Registry
      abis:
        - name: Registry
          file: ./node_modules/@mimic-fi/v3-registry/artifacts/contracts/interfaces/IRegistry.sol/IRegistry.json
      eventHandlers:
        - event: Registered(indexed address,string,bool)
          handler: handleRegistered
        - event: Deprecated(indexed address)
          handler: handleDeprecated
      file: ./src/Registry.ts
  - kind: ethereum/contract
    name: Deployer
    network: {{network}}
    source:
      address: '{{deployerAddress}}'
      abi: Deployer
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Deployer
      abis:
        - name: Deployer
          file: ./node_modules/@mimic-fi/v3-deployer/artifacts/contracts/interfaces/IDeployer.sol/IDeployer.json
        - name: Authorizer
          file: ./node_modules/@mimic-fi/v3-authorizer/artifacts/contracts/interfaces/IAuthorizer.sol/IAuthorizer.json
        - name: PriceOracle
          file: ./node_modules/@mimic-fi/v3-price-oracle/artifacts/contracts/interfaces/IPriceOracle.sol/IPriceOracle.json
        - name: SmartVault
          file: ./node_modules/@mimic-fi/v3-smart-vault/artifacts/contracts/interfaces/ISmartVault.sol/ISmartVault.json
        - name: Task
          file: ./node_modules/@mimic-fi/v3-tasks/artifacts/contracts/interfaces/ITask.sol/ITask.json
      eventHandlers:
        - event: AuthorizerDeployed(string,string,address,address)
          handler: handleAuthorizerDeployed
        - event: PriceOracleDeployed(string,string,address,address)
          handler: handlePriceOracleDeployed
        - event: SmartVaultDeployed(string,string,address,address)
          handler: handleSmartVaultDeployed
        - event: TaskDeployed(string,string,address,address)
          handler: handleTaskDeployed
      file: ./src/Deployer.ts
  - kind: ethereum/contract
    name: Relayer
    network: {{network}}
    source:
      address: '{{relayerAddress}}'
      abi: Relayer
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Relayer
      abis:
        - name: Relayer
          file: ./node_modules/@mimic-fi/v3-relayer/artifacts/contracts/interfaces/IRelayer.sol/IRelayer.json
        - name: Task
          file: ./node_modules/@mimic-fi/v3-tasks/artifacts/contracts/interfaces/ITask.sol/ITask.json
        - name: ERC20
          file: ./abis/IERC20.json
        - name: UniswapPairV2
          file: ./node_modules/@uniswap/v2-core/build/IUniswapV2Pair.json
        - name: UniswapFactoryV2
          file: ./node_modules/@uniswap/v2-core/build/IUniswapV2Factory.json
        - name: UniswapPoolV3
          file: ./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json
        - name: UniswapFactoryV3
          file: ./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Factory.sol/IUniswapV3Factory.json
        - name: UniswapRouterV3
          file: ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryImmutableState.sol/IPeripheryImmutableState.json
      eventHandlers:
        - event: Deposited(indexed address,uint256)
          handler: handleDeposited
        - event: GasPaid(indexed address,uint256,uint256)
          handler: handleGasPaid
        - event: QuotaPaid(indexed address,uint256)
          handler: handleQuotaPaid
        - event: SmartVaultCollectorSet(indexed address,indexed address)
          handler: handleSmartVaultCollectorSet
        - event: SmartVaultMaxQuotaSet(indexed address,uint256)
          handler: handleSmartVaultMaxQuotaSet
        - event: TaskExecuted(indexed address,indexed address,bytes,bool,bytes,uint256,uint256)
          handler: handleTaskExecuted
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawn
      file: ./src/Relayer.ts
  - kind: ethereum/contract
    name: FeeController
    network: {{network}}
    source:
      address: '{{feeControllerAddress}}'
      abi: FeeController
      startBlock: {{blockNumber}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - FeeController
      abis:
        - name: FeeController
          file: ./node_modules/@mimic-fi/v3-fee-controller/artifacts/contracts/interfaces/IFeeController.sol/IFeeController.json
      eventHandlers:
        - event: FeeCollectorSet(indexed address,indexed address)
          handler: handleFeeCollectorSet
        - event: FeePercentageSet(indexed address,uint256)
          handler: handleFeePercentageSet
        - event: MaxFeePercentageSet(indexed address,uint256)
          handler: handleMaxFeePercentageSet
      file: ./src/FeeController.ts
templates:
  - kind: ethereum/contract
    name: Authorizer
    network: {{network}}
    source:
      abi: Authorizer
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Authorizer
      abis:
        - name: Authorizer
          file: ./node_modules/@mimic-fi/v3-authorizer/artifacts/contracts/interfaces/IAuthorizer.sol/IAuthorizer.json
      eventHandlers:
        - event: Authorized(indexed address,indexed address,indexed bytes4,(uint8,uint248)[])
          handler: handleAuthorized
        - event: Unauthorized(indexed address,indexed address,indexed bytes4)
          handler: handleUnauthorized
      file: ./src/Authorizer.ts
  - kind: ethereum/contract
    name: PriceOracle
    network: {{network}}
    source:
      abi: PriceOracle
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PriceOracle
      abis:
        - name: PriceOracle
          file: ./node_modules/@mimic-fi/v3-price-oracle/artifacts/contracts/interfaces/IPriceOracle.sol/IPriceOracle.json
        - name: ERC20
          file: ./abis/IERC20.json
      eventHandlers:
        - event: SignerSet(indexed address,bool)
          handler: handleSignerSet
          receipt: true
        - event: FeedSet(indexed address,indexed address,address)
          handler: handleFeedSet
          receipt: true
      file: ./src/PriceOracle.ts
  - kind: ethereum/contract
    name: SmartVault
    network: {{network}}
    source:
      abi: SmartVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - SmartVault
      abis:
        - name: SmartVault
          file: ./node_modules/@mimic-fi/v3-smart-vault/artifacts/contracts/interfaces/ISmartVault.sol/ISmartVault.json
        - name: ERC20
          file: ./abis/IERC20.json
        - name: UniswapPairV2
          file: ./node_modules/@uniswap/v2-core/build/IUniswapV2Pair.json
        - name: UniswapFactoryV2
          file: ./node_modules/@uniswap/v2-core/build/IUniswapV2Factory.json
        - name: UniswapPoolV3
          file: ./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json
        - name: UniswapFactoryV3
          file: ./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Factory.sol/IUniswapV3Factory.json
        - name: UniswapRouterV3
          file: ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryImmutableState.sol/IPeripheryImmutableState.json
      eventHandlers:
        - event: Paused()
          handler: handlePause
        - event: Unpaused()
          handler: handleUnpaused
        - event: PriceOracleSet(indexed address)
          handler: handlePriceOracleSet
        - event: BalanceConnectorUpdated(indexed bytes32,indexed address,uint256,bool)
          handler: handleBalanceConnectorUpdated
        - event: Executed(indexed address,bytes,bytes)
          handler: handleExecuted
        - event: Called(indexed address,bytes,uint256,bytes)
          handler: handleCalled
        - event: Wrapped(uint256)
          handler: handleWrapped
        - event: Unwrapped(uint256)
          handler: handleUnwrapped
        - event: Collected(indexed address,indexed address,uint256)
          handler: handleCollected
        - event: Withdrawn(indexed address,indexed address,uint256,uint256)
          handler: handleWithdrawn
      file: ./src/SmartVault.ts
  - kind: ethereum/contract
    name: Task
    network: {{network}}
    source:
      abi: Task
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Task
      abis:
        - name: Task
          file: ./abis/IAllTasks.json
        - name: ERC20
          file: ./abis/IERC20.json
      eventHandlers:
        - event: BalanceConnectorsSet(indexed bytes32,indexed bytes32)
          handler: handleBalanceConnectorsSet
        - event: CustomTokenThresholdSet(indexed address,address,uint256,uint256)
          handler: handleCustomTokenThresholdSet 
        - event: CustomVolumeLimitSet(indexed address,indexed address,uint256,uint256)
          handler: handleCustomVolumeLimitSet
        - event: DefaultVolumeLimitSet(indexed address,uint256,uint256)
          handler: handleDefaultVolumeLimitSet
        - event: DefaultTokenThresholdSet(address,uint256,uint256)
          handler: handleDefaultTokenThresholdSet
        - event: GasLimitsSet(uint256,uint256,uint256,uint256)
          handler: GasLimitsSet
        - event: GasPriceLimitSet(uint256)
          handler: handleGasPriceLimitSet
        - event: Paused()
          handler: handlePaused
        - event: PriorityFeeLimitSet(uint256)
          handler: handlePriorityFeeLimitSet
        - event: TimeLockAllowedAtSet(uint256)
          handler: handleTimeLockAllowedAtSet
        - event: TimeLockSet(uint8,uint256,uint256,uint256)
          handler: handleTimeLockSet
        - event: TokensAcceptanceListSet(indexed address,bool)
          handler: handleTokensAcceptanceListSet        
        - event: TokensAcceptanceTypeSet(uint8)
          handler: handleTokensAcceptanceTypeSet
        - event: TxCostLimitPctSet(uint256)
          handler: handleTxCostLimitPctSet
        - event: TxCostLimitSet(uint256)
          handler: handleTxCostLimitSet
        - event: Unpaused()
          handler: handleUnpaused
        - event: ConnectorSet(indexed address)
          handler: handleConnectorSet
        - event: DefaultMaxFeeSet(indexed address,uint256)
          handler: handleDefaultMaxFeeSet
        - event: DefaultMaxSlippageSet(uint256)
          handler: handleDefaultMaxSlippageSet
        - event: DefaultTokenOutSet(indexed address)
          handler: handleDefaultTokenOutSet
        - event: CustomMaxFeeSet(indexed address,indexed address,uint256)
          handler: defaultCustomMaxFeeSet
        - event: CustomMaxSlippageSet(indexed address,uint256)
          handler: handleCustomMaxSlippageSet
        - event: CustomTokenOutSet(indexed address,address)
          handler: handleCustomTokenOutSet
        - event: RecipientSet(indexed address)
          handler: handleRecipientSet
        - event: DefaultDestinationChainSet(indexed uint256)
          handler: handleDefaultDestinationChainSet
        - event: CustomDestinationChainSet(indexed address,indexed uint256)
          handler: handleCustomDestinationChainSet
      file: ./src/Task.ts
      